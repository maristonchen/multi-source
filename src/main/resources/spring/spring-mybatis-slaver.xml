<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="dataSourceSlaver" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">

        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.slaver.url}"/>
        <property name="username" value="${jdbc.slaver.username}"/>
        <property name="password" value="${jdbc.slaver.password}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${jdbc.druid.initialSize}"/>
        <!--连接池最小空闲 -->
        <property name="minIdle" value="${jdbc.druid.minIdle}"/>
        <!--连接池最大使用连接数量 -->
        <property name="maxActive" value="${jdbc.druid.maxActive}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.druid.maxWait}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.druid.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${jdbc.druid.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.druid.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.druid.testOnReturn}"/>
        <!--打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!--关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${jdbc.druid.filters}"/>
        <!-- <property name="proxyFilters"> <list> <ref bean="stat-filter"/> <ref
            bean="wall-filter"/> <ref bean="log-filter"/> </list> </property> -->
    </bean>

    <!-- 创建SqlSessionFactory -->
    <bean id="sqlSessionFactorySlaver" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceSlaver"/>
        <property name="mapperLocations" value="classpath:com/shenzhenair/source/mapper/slaver/mapping/*.xml"/>
        <property name="typeAliasesPackage" value="com.shenzhenair.source.bean.slaver"/>
        <property name="configLocation" value="classpath:/spring/mybatis-config.xml"/>
    </bean>

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="com.shenzhenair.source.mapper.slaver"
          p:sqlSessionFactoryBeanName="sqlSessionFactorySlaver"
          p:annotationClass="org.springframework.stereotype.Repository"/>

    <!-- 事物管理 -->
    <tx:annotation-driven transaction-manager="transactionManagerSlaver"/>

    <bean id="transactionManagerSlaver" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceSlaver"/>
    </bean>
</beans>
